/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.ApiErrorResponse
import io.swagger.client.model.IDModel
import io.swagger.client.model.NameModel
import io.swagger.client.model.OperationBOMModel
import io.swagger.client.model.OperationInputGroupModel
import io.swagger.client.model.OperationsModel
import io.swagger.client.model.RoutingStepsModel
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object RoutingApi {

  /**
   * Returns the operations for a given stocking point.
   * 
   * Expected answers:
   *   code 200 : OperationsModel (successful operation)
   *   code 401 : ApiErrorResponse (Unauthorised)
   *   code 500 : ApiErrorResponse (Interbal server error)
   * 
   * @param siteRef Site reference for the required site. The use of @allw will return the operation for all sites.
   * @param stockingPointID Stocking point for the operation. The use of @all will return 
   */
  def getOperation(siteRef: String, stockingPointID: String): ApiRequest[OperationsModel] =
    ApiRequest[OperationsModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/ewanpeters/production-planning/1.0.0", "/sites/{siteRef}/productionplanning/operations/{stockingPointID}", "application/json")
      .withPathParam("siteRef", siteRef)
      .withPathParam("stockingPointID", stockingPointID)
      .withSuccessResponse[OperationsModel](200)
      .withErrorResponse[ApiErrorResponse](401)
      .withErrorResponse[ApiErrorResponse](500)
        /**
   * Returns the operation BOM for a given stocking point.
   * 
   * Expected answers:
   *   code 200 : OperationBOMModel (successful operation)
   *   code 401 : ApiErrorResponse (Unauthorised)
   *   code 500 : ApiErrorResponse (Internal Server Error)
   * 
   * @param siteRef Site reference for the required site. The use of @all will return the operation BOM for all sites.
   * @param stockingPointId Stocking point for the oprtation BOM. The use of @all will return the operation BOM for all site.
   */
  def getOperationBOM(siteRef: String, stockingPointId: String): ApiRequest[OperationBOMModel] =
    ApiRequest[OperationBOMModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/ewanpeters/production-planning/1.0.0", "/sites/{siteRef}/productionplanning/operationBOM/{stockingPointId}", "application/json")
      .withPathParam("siteRef", siteRef)
      .withPathParam("stockingPointId", stockingPointId)
      .withSuccessResponse[OperationBOMModel](200)
      .withErrorResponse[ApiErrorResponse](401)
      .withErrorResponse[ApiErrorResponse](500)
        /**
   * Returns the operation input group for a given stocking point.
   * 
   * Expected answers:
   *   code 200 : OperationInputGroupModel (successful operation)
   *   code 401 : ApiErrorResponse (Unauthorised)
   *   code 500 : ApiErrorResponse (Internal Server Error)
   * 
   * @param siteRef Site reference for the required site. The use of @all will return the operation BOM for all sites.
   * @param stockingPointID Stocking point for the operation input group. The use of @all will return the operation input group for all sites.
   */
  def getOperationInputGroup(siteRef: String, stockingPointID: String): ApiRequest[OperationInputGroupModel] =
    ApiRequest[OperationInputGroupModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/ewanpeters/production-planning/1.0.0", "/sites/{siteRef}/productionplanning/operationinputgroups/{stockingPointID}", "application/json")
      .withPathParam("siteRef", siteRef)
      .withPathParam("stockingPointID", stockingPointID)
      .withSuccessResponse[OperationInputGroupModel](200)
      .withErrorResponse[ApiErrorResponse](401)
      .withErrorResponse[ApiErrorResponse](500)
        /**
   * Returns the products for a given site.
   * 
   * Expected answers:
   *   code 200 : IDModel (successful operation)
   *   code 401 : ApiErrorResponse (Unauthorised)
   *   code 500 : ApiErrorResponse (Interbal server error)
   * 
   * @param siteRef Site reference for the required site. The use of @allw will return the operation for all sites.
   * @param iD ID for a given product. The use of @all will return 
   */
  def getProducts(siteRef: String, iD: String): ApiRequest[IDModel] =
    ApiRequest[IDModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/ewanpeters/production-planning/1.0.0", "/sites/{siteRef}/productionplanning/products/{ID}", "application/json")
      .withPathParam("siteRef", siteRef)
      .withPathParam("ID", iD)
      .withSuccessResponse[IDModel](200)
      .withErrorResponse[ApiErrorResponse](401)
      .withErrorResponse[ApiErrorResponse](500)
        /**
   * Returns the list of routings operationID: getRoutings
   * 
   * Expected answers:
   *   code 200 : NameModel (successful operation)
   *   code 401 : ApiErrorResponse (Unauthorised)
   *   code 500 : ApiErrorResponse (Unauthorised)
   * 
   * @param siteRef Site reference for the required site. The use of @all will return the operation for all sites.
   * @param name The name for the routing. The use of @all will retrun the operation for all sites.
   */
  def sitesSiteRefProductionplanningRoutingNameGet(siteRef: String, name: String): ApiRequest[NameModel] =
    ApiRequest[NameModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/ewanpeters/production-planning/1.0.0", "/sites/{siteRef}/productionplanning/routing/{name}", "application/json")
      .withPathParam("siteRef", siteRef)
      .withPathParam("name", name)
      .withSuccessResponse[NameModel](200)
      .withErrorResponse[ApiErrorResponse](401)
      .withErrorResponse[ApiErrorResponse](500)
        /**
   * Returns the list of routing steps operationID: getRoutingSteps
   * 
   * Expected answers:
   *   code 200 : RoutingStepsModel (successful operation)
   *   code 401 : ApiErrorResponse (Unauthorised)
   *   code 500 : ApiErrorResponse (Unauthorised)
   * 
   * @param siteRef Site reference for the required site. The use of @all will return the routing steps for all sites.
   * @param routingID The name of the routing ID. The use of @all will return the routing ID for all the sites.
   */
  def sitesSiteRefProductionplanningRoutingstepsRoutingIDGet(siteRef: String, routingID: String): ApiRequest[RoutingStepsModel] =
    ApiRequest[RoutingStepsModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/ewanpeters/production-planning/1.0.0", "/sites/{siteRef}/productionplanning/routingsteps/{RoutingID}", "application/json")
      .withPathParam("siteRef", siteRef)
      .withPathParam("RoutingID", routingID)
      .withSuccessResponse[RoutingStepsModel](200)
      .withErrorResponse[ApiErrorResponse](401)
      .withErrorResponse[ApiErrorResponse](500)
      

}

